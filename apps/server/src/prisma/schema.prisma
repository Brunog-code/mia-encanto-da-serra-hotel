generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//enums
enum RoomStatus {
  AVAILABLE
  MAINTENANCE
  OCCUPIED
}

enum RoomCategory {
  STANDARD
  LUXURY
}

enum ReservationStatus {
  PENDING
  CONFIRMED
  CANCELED
  FINALIZED
}

enum PaymentStatus {
  PENDING
  PAID
  FAILED
}

enum PaymentMethod {
  CARD
  PIX
}

enum MediaCategory {
  HOTEL
  ACTIVITY
  RESTAURANT
  ROOM
}

//models
model Customer {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  phone     String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  reservations Reservation[] @relation("CustomerReservation")
}

model RoomType {
  id          String       @id @default(uuid())
  category    RoomCategory @unique
  description String
  price       Decimal
  capacity    Int
  amenities   String[] // lista de comodidades

  rooms       Room[]
  mediaImages MediaImage[]
}

model Room {
  id        String     @id @default(uuid())
  number    String     @unique
  capacity  Int
  status    RoomStatus @default(AVAILABLE)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  typeId    String

  type         RoomType      @relation(fields: [typeId], references: [id])
  reservations Reservation[] @relation("RoomReservation")
}

model Reservation {
  id          String            @id @default(uuid())
  checkIn     DateTime
  checkOut    DateTime
  status      ReservationStatus @default(PENDING)
  totalAmount Decimal
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt

  customerId String
  customer   Customer @relation("CustomerReservation", fields: [customerId], references: [id], onDelete: Cascade)

  roomId String
  room   Room   @relation("RoomReservation", fields: [roomId], references: [id], onDelete: Cascade)

  payment Payment?
}

model Payment {
  id            String        @id @default(uuid())
  methodPayment PaymentMethod
  installments  Int           @default(1)
  amount        Decimal
  status        PaymentStatus @default(PENDING)
  mpPaymentId   String
  qrCode        String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  reservationId String      @unique
  reservation   Reservation @relation(fields: [reservationId], references: [id], onDelete: Cascade)
}

model MediaImage {
  id          String        @id @default(uuid())
  category    MediaCategory
  url         String        @unique
  title       String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  // Relacionamento opcional: s√≥ usado se category = ROOM
  roomTypeId String?
  roomType   RoomType? @relation(fields: [roomTypeId], references: [id], onDelete: Cascade)
}
